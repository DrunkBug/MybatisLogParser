name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: Package build
      run: |
        cd build
        zip -r ../mybatis-log-parser-build.zip .
        cd ..

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./mybatis-log-parser-build.zip
        asset_name: mybatis-log-parser-build.zip
        asset_content_type: application/zip
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Deploy to Server
      run: |
        scp mybatis-log-parser-build.zip ${{ secrets.USER }}@${{ secrets.IP }}:/var/www/122383.xyz/MybatisLogParser/
        ssh "${{ secrets.USER }}@${{ secrets.IP }}" << EOF
          cd /var/www/122383.xyz/MybatisLogParser
          unzip -o mybatis-log-parser-build.zip -d .
          rm -f mybatis-log-parser-build.zip
          nginx -s reload || echo "nginx reload failed or not needed"
        EOF
